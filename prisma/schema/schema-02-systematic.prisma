/// Channel information.
///
/// `shopping_channels` is a concept that shapes the distribution channel in 
/// the market. Therefore, the difference in the channel in this e-commerce 
/// system means that it is another site or application.
///
/// By the way, if your shopping mall system requires only one channel, then 
/// just use only one. This concept is designed to be expandable in the future.
///
/// @namespace Systematic
/// @erd Sales
/// @author Samchon
model shopping_channels {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id @db.Uuid

  /// Identifier code.
  code String @db.VarChar

  /// Name of channel.
  name String @db.VarChar

  /// Creation time of record.
  created_at DateTime @db.Timestamptz

  /// Update time of record.
  updated_at DateTime @db.Timestamptz

  /// Deletion time of record.
  deleted_at DateTime? @db.Timestamptz

  //----
  // RELATIONS
  //----
  shopping_channel_categories shopping_channel_categories[]
  shopping_customers          shopping_customers[]
  shopping_citizens           shopping_citizens[]
  shopping_members            shopping_members[]
  shopping_member_emails      shopping_member_emails[]
  shopping_external_users     shopping_external_users[]

  @@unique([code])
  @@unique([name])
  @@index([created_at])
}

/// Category of channel.
///
/// `shopping_channel_categories` is a concept that refers to classification 
/// categories within a specific channel, and is exactly the same as the concept 
/// commonly referred to as "category" in shopping malls.
///
/// And `shopping_channel_categories` is different with 
/// {@link shopping_sections}. {@link shopping_sections} refers to a "corner" 
/// that is independent spatial information in the offline market, which cannot 
/// simultaneously classified in a {@link shopping_sales sale}. Besides, 
/// `shopping_channel_categories` can be classified into multiple categories 
/// in a {@link shopping_sales sale} simultaneously.
/// 
/// Product | Section (corner) | Categories
/// --------|------------------|--------------------------------------
/// Beef  | Butcher corner   | Frozen food, Meat, **Favorite food**
/// Grape   | Fruit corner   | Fresh food, **Favorite food**
/// 
/// In addition, as `shopping_channel_categories` has 1:N self recursive 
/// relationship, it is possible to express below hierarchical structures. 
/// Thus, each channel can set their own category classification as they want.
///
///   - Food > Meat > Frozen
///   - Electronics > Notebook > 15 inches
///   - Miscellaneous > Wallet
/// 
/// Furthermore, `shopping_channel_categories` is designed to merge between 
/// themselves, so there is no burden to edit the category at any time.
///
/// @namespace Systematic
/// @erd Sales
/// @author Samchon
model shopping_channel_categories {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id @db.Uuid

  /// Belonged channel's {@link shopping_channels.id}.
  shopping_channel_id String @db.Uuid

  /// Parent category's {@link shopping_channel_categories.id}.
  ///
  /// Only when the category is a subcategory of another one.
  parent_id String? @db.Uuid

  /// Identifier code.
  code String @db.VarChar

  /// Name of category.
  name String @db.VarChar

  /// Creation time of record.
  created_at DateTime @db.Timestamptz

  /// Updadte time of record.
  updated_at DateTime @db.Timestamptz

  /// Deletion time of record.
  deleted_at DateTime? @db.Timestamptz

  //----
  // RELATIONS
  //----
  channel                           shopping_channels                   @relation(fields: [shopping_channel_id], references: [id], onDelete: Cascade)
  parent                            shopping_channel_categories?        @relation("shopping_channel_categories_children", fields: [parent_id], references: [id], onDelete: Cascade)
  children                          shopping_channel_categories[]       @relation("shopping_channel_categories_children")
  shopping_sale_snapshot_categories shopping_sale_snapshot_categories[]

  @@unique([shopping_channel_id, code])
  @@unique([shopping_channel_id, parent_id, name])
  @@index([parent_id])
}

/// Section information.
///
/// `shopping_sections` is a concept that refers to the spatial information 
/// of the market.
///
/// If we compare the section mentioned here to the offline market, it means 
/// a spatially separated area within the store, such as the "fruit corner" 
/// or "butcher corner". Therefore, in the {@link shopping_sales sale} entity, 
/// it is not possible to classify multiple sections simultaneously, but only 
/// one section can be classified.
///
/// By the way, if your shopping mall system requires only one section, then 
/// just use only one. This concept is designed to be expandable in the future.
///
/// @namespace Systematic
/// @erd Sales
/// @author Samchon
model shopping_sections {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id @db.Uuid

  /// Identifier code.
  code String @db.VarChar

  /// Name of section.
  name String @db.VarChar

  /// Creation time of record.
  created_at DateTime @db.Timestamptz

  /// Update time of record.
  updated_at DateTime @db.Timestamptz

  /// Deletion time of record.
  deleted_at DateTime? @db.Timestamptz

  //----
  // RELATIONS
  //----
  shopping_sales                    shopping_sales[]
  shopping_coupon_section_criterias shopping_coupon_section_criterias[]

  @@unique([code])
  @@unique([name])
  @@index([created_at])
}

/// @hidden
model mv_cache_times {
  id     String   @id @db.Uuid
  schema String   @db.VarChar
  table  String   @db.VarChar
  key    String   @db.VarChar
  value  DateTime @db.Timestamptz

  @@unique([schema, table, key])
}
