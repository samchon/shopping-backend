/// Favorite sales.
///
/// `shopping_sale_favorites` is an entity that symbolizes the 
/// {@link shopping_sales sale} that the {@link shopping_customers customer}
/// has favorited. Also, `shopping_sale_favorites` archives the 
/// {@link shopping_sale_snapshots snapshot} of the sale at the time when the 
/// customer favorites it.
///
/// @namespace Favorites
/// @author Samchon
model shopping_sale_favorites {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id @db.Uuid

  /// Belonged customer's {@link shopping_customers.id}
  shopping_customer_id String @db.Uuid

  /// Target sale's {@link shopping_sales.id}
  shopping_sale_id String @db.Uuid

  /// Target snapshot's {@link shopping_sale_snapshots.id}
  ///
  /// The snapshot of the sale at the time when the customer favorites it.
  shopping_sale_snapshot_id String @db.Uuid

  /// Creation time of record.
  created_at DateTime @db.Timestamptz

  /// Deletion time of record.
  deleted_at DateTime? @db.Timestamptz

  //----
  // RELATIONS
  //----
  customer shopping_customers      @relation(fields: [shopping_customer_id], references: [id], onDelete: Cascade)
  sale     shopping_sales          @relation(fields: [shopping_sale_id], references: [id], onDelete: Cascade)
  snapshot shopping_sale_snapshots @relation(fields: [shopping_sale_snapshot_id], references: [id], onDelete: Cascade)

  @@index([shopping_customer_id])
  @@index([shopping_sale_id])
  @@index([shopping_sale_snapshot_id])
}

/// Favorite inquiries.
///
/// `shopping_sale_snapshot_inquiry_favorites` is an entity that symbolizes 
/// the {@link shopping_sale_snapshot_inquiries inquiry} that the 
/// {@link shopping_customers customer} has favorited. Also, 
/// `shopping_sale_snapshot_inquiry_favorites` archives the 
/// {@link shopping_sale_snapshots snapshot} of the inquiry at the time when
/// the customer favorites it. 
/// 
/// @namespace Favorites
/// @author Samchon
model shopping_sale_snapshot_inquiry_favorites {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id @db.Uuid

  /// Belonged customer's {@link shopping_customers.id}
  shopping_customer_id String @db.Uuid

  /// Target inquiry's {@link shopping_sale_snapshot_inquiries.id}
  shopping_sale_snapshot_inquiry_id String @db.Uuid

  /// Target snapshot's {@link shopping_sale_snapshots.id}
  ///
  /// The snapshot of the inquiry at the time when the customer favorites it.
  bbs_article_snapshot_id String @db.Uuid

  /// Creation time of record.
  created_at DateTime @db.Timestamptz

  /// Deletion time of record.
  deleted_at DateTime? @db.Timestamptz

  //----
  // RELATIONS
  //----
  /// Belonged customer.
  customer shopping_customers @relation(fields: [shopping_customer_id], references: [id], onDelete: Cascade)

  /// Belonged inquiry.
  inquiry shopping_sale_snapshot_inquiries @relation(fields: [shopping_sale_snapshot_inquiry_id], references: [id], onDelete: Cascade)

  /// Belonged snapshot.
  snapshot bbs_article_snapshots @relation(fields: [bbs_article_snapshot_id], references: [id], onDelete: Cascade)

  @@index([shopping_customer_id])
  @@index([shopping_sale_snapshot_inquiry_id])
}

/// Favorite addresses.
///
/// `shopping_address_favorites` is an entity that symbolizes the
/// {@link shopping_addresses address} that the 
/// {@link shopping_customers customer} has favorited.
///
/// @namespace Favorites
/// @author Samchon
model shopping_address_favorites {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id @db.Uuid

  /// Belonged customer's {@link shopping_customers.id}
  shopping_customer_id String @db.Uuid

  /// Target address's {@link shopping_addresses.id}
  shopping_address_id String @db.Uuid

  /// Title of the favorite address.
  title String @db.VarChar

  /// Whether the favorite address is primary or not.
  primary Boolean @db.Boolean

  /// Creation time of record.
  created_at DateTime @db.Timestamptz

  /// Deletion time of record.
  deleted_at DateTime? @db.Timestamptz

  //----
  // RELATIONS
  //----
  customer shopping_customers @relation(fields: [shopping_customer_id], references: [id], onDelete: Cascade)
  address  shopping_addresses @relation(fields: [shopping_address_id], references: [id], onDelete: Cascade)

  @@index([shopping_customer_id])
  @@index([shopping_address_id])
}
